packages <- c("reshape2", "rmarkdown",
"data.table", "Hmisc", "dplr",
"stargazer", "knitr",
"xtable","tidyverse",
"RSQLite", "dbplyr")
install.packages(packages)
dir.create("data_output")
dir.create("fig_output")
library(tidyverse)
library(here)
library(readr)
SAFI_clean <- read_csv("dPrep/data/SAFI_clean.csv")
View(SAFI_clean)
?here
interviews <- read_csv("data", "SAFI_clean.csv"), na = "NULL"
interviews <- read_csv(here("data", "SAFI_clean.csv"), na = "NULL")
## Chapter 4
# selecting columns and filtering rows
select(interviews, village, no_membrs, months_lack_food)
View(SAFI_clean)
interviews <- SAFI_clean
interviews <- read_csv(here("data", "SAFI_clean.csv"), na = "NULL")
interviews <- read_csv(interviews, na = "NULL")
select(interviews, village, no_membrs, months_lack_food)
view(interviews)
interviews[c(village, no_membr, months_lack_food)]
interviews[c("village", "no_membr", "months_lack_food")]
interviews[c("village", "no_membrs", "months_lack_food")]
## yields same results
view(interviews)
## yields same results
select(interviews, "village":"months_lack_food")
## yields same results
select(interviews, "village":"resondent_wall_type")
## yields same results
select(interviews, "village":"respondent_wall_type")
# filter rows in dyplr
filter(interviews, village == "chirodzo")
# filter rows in dyplr
filter(interviews, village == "Chirodzo")
# filter with AND/OR conditions
filter(interviews, "village" == "Chirodzo", rooms > 1, no_meals > 2)
# filter rows in dyplr
filter(interviews, village == "Chirodzo")
# filter with AND/OR conditions
filter(interviews, "village" == "Chirodzo", rooms > 1, no_meals > 2)
# filter with AND/OR conditions
filter(interviews, "village" == "Chirodzo", rooms > 1, no_meals > 2)
# filter rows in dyplr
filter(interviews, village == "Chirodzo")
# filter with AND/OR conditions
filter(interviews, "village" == "Chirodzo", rooms > 1, no_meals > 2)
# filter with AND/OR conditions
filter(interviews, village == "Chirodzo", rooms > 1, no_meals > 2)
library(readr)
SAFI_clean <- read_csv("dPrep/data/SAFI_clean.csv")
View(SAFI_clean)
View(interviews)
source("~/.active-rstudio-document", echo=TRUE)
interviews <- read_csv(SAFI_clean)
library(readr)
listings <- read_csv("Tilburg Uni/dPrep(R)/01_Project/listings.csv")
View(listings)
# in the listng data, i want to create a new subdata with all the listings that has all the minmun nights of <2 nights
filter(listings, minimum_nights < 2)
# now I want to view the first 6 rows of the subdata
head(subdata)
source("~/.active-rstudio-document", echo=TRUE)
a
# in the listng data, i want to create a new subdata with all the listings that has all the minmun nights of <2 nights
filter(listings, minimum_nights < 2)
listing <- read.csv("listings.csv")
# in the listng data, i want to create a new subdata with all the listings that has all the minmun nights of <2 nights
filter(listings, minimum_nights < 2)
# assign variable list to the listings.csv file
listings <- read.csv("listings.csv")
library(readr)
listings <- read_csv("Tilburg Uni/dPrep(R)/01_Project/listings.csv")
View(listings)
# assign variable list to the listings.csv file
listings <- read.csv("listings.csv")
filter(listings, minimum_nights < 2)
# q: how do I view the listings data
# a: by typing the name of the variable that the data is assigned to
listings
library(readr)
listings <- read_csv("Tilburg Uni/dPrep(R)/01_Project/listings.csv")
View(listings)
source("~/Github/team-project-dprep_group_8/src/data-preparation/data-preparation.R", echo=TRUE)
# create a list of city datasets
city_datasets <- list(Amsterdam = combined_ams, Tokyo = combined_tyo, London = combined_ldn)
# Initialize an empty dataframe to store results
pricing_results <- data.frame()
# Loop through each city dataset
for (city_name in names(city_datasets)) {
# Get the city dataset
city_data <- city_datasets[[city_name]]
# Summarize pricing by stay_length
pricing_summary <- city_data %>%
group_by(stay_type) %>%
summarize(mean_price = mean(price, na.rm = TRUE),
median_price = median(price, na.rm = TRUE),
min_price = min(price, na.rm = TRUE),
max_price = max(price, na.rm = TRUE))
# Add city name to the summary
pricing_summary$city <- city_name
# Append the summary to the results dataframe
pricing_results <- bind_rows(pricing_results, pricing_summary)
}
# Print the combined results
print(pricing_results)
# Perform Linear Regression for each city
lr_results <- list()
# Loop through each city dataset
for (city_name in names(city_datasets)) {
# Get the city dataset
city_data <- city_datasets[[city_name]]
# Perform Linear Regression with price as IV and stay_type as DV with moderators room_type and review_scores_rating
lr_result <- lm(price ~ stay_type_dummy * room_type * review_scores_rating, data = city_data)
# Store Linear Regression results in the list
lr_results[[city_name]] <- tidy(lr_result)
}
# Print Linear Regression results for each city
for (city_name in names(lr_results)) {
cat("City:", city_name, "\n")
print(lr_results[[city_name]])
cat("\n")
}
#load libraries
library(readr)
library(data.table)
library(dplyr)
# create a list of city datasets
city_datasets <- list(Amsterdam = combined_ams, Tokyo = combined_tyo, London = combined_ldn)
# Initialize an empty dataframe to store results
pricing_results <- data.frame()
# Loop through each city dataset
for (city_name in names(city_datasets)) {
# Get the city dataset
city_data <- city_datasets[[city_name]]
# Summarize pricing by stay_length
pricing_summary <- city_data %>%
group_by(stay_type) %>%
summarize(mean_price = mean(price, na.rm = TRUE),
median_price = median(price, na.rm = TRUE),
min_price = min(price, na.rm = TRUE),
max_price = max(price, na.rm = TRUE))
# Add city name to the summary
pricing_summary$city <- city_name
# Append the summary to the results dataframe
pricing_results <- bind_rows(pricing_results, pricing_summary)
}
# Print the combined results
print(pricing_results)
# Perform Linear Regression for each city
lr_results <- list()
# Loop through each city dataset
for (city_name in names(city_datasets)) {
# Get the city dataset
city_data <- city_datasets[[city_name]]
# Perform Linear Regression with price as IV and stay_type as DV with moderators room_type and review_scores_rating
lr_result <- lm(price ~ stay_type_dummy * room_type * review_scores_rating, data = city_data)
# Store Linear Regression results in the list
lr_results[[city_name]] <- tidy(lr_result)
}
# Print Linear Regression results for each city
for (city_name in names(lr_results)) {
cat("City:", city_name, "\n")
print(lr_results[[city_name]])
cat("\n")
}
library(tidyr)
# create a list of city datasets
city_datasets <- list(Amsterdam = combined_ams, Tokyo = combined_tyo, London = combined_ldn)
# Initialize an empty dataframe to store results
pricing_results <- data.frame()
# Loop through each city dataset
for (city_name in names(city_datasets)) {
# Get the city dataset
city_data <- city_datasets[[city_name]]
# Summarize pricing by stay_length
pricing_summary <- city_data %>%
group_by(stay_type) %>%
summarize(mean_price = mean(price, na.rm = TRUE),
median_price = median(price, na.rm = TRUE),
min_price = min(price, na.rm = TRUE),
max_price = max(price, na.rm = TRUE))
# Add city name to the summary
pricing_summary$city <- city_name
# Append the summary to the results dataframe
pricing_results <- bind_rows(pricing_results, pricing_summary)
}
# Print the combined results
print(pricing_results)
# Perform Linear Regression for each city
lr_results <- list()
# Loop through each city dataset
for (city_name in names(city_datasets)) {
# Get the city dataset
city_data <- city_datasets[[city_name]]
# Perform Linear Regression with price as IV and stay_type as DV with moderators room_type and review_scores_rating
lr_result <- lm(price ~ stay_type_dummy * room_type * review_scores_rating, data = city_data)
# Store Linear Regression results in the list
lr_results[[city_name]] <- tidy(lr_result)
}
# Print Linear Regression results for each city
for (city_name in names(lr_results)) {
cat("City:", city_name, "\n")
print(lr_results[[city_name]])
cat("\n")
}
library(tidyverse)
# create a list of city datasets
city_datasets <- list(Amsterdam = combined_ams, Tokyo = combined_tyo, London = combined_ldn)
# Initialize an empty dataframe to store results
pricing_results <- data.frame()
# Loop through each city dataset
for (city_name in names(city_datasets)) {
# Get the city dataset
city_data <- city_datasets[[city_name]]
# Summarize pricing by stay_length
pricing_summary <- city_data %>%
group_by(stay_type) %>%
summarize(mean_price = mean(price, na.rm = TRUE),
median_price = median(price, na.rm = TRUE),
min_price = min(price, na.rm = TRUE),
max_price = max(price, na.rm = TRUE))
# Add city name to the summary
pricing_summary$city <- city_name
# Append the summary to the results dataframe
pricing_results <- bind_rows(pricing_results, pricing_summary)
}
# Print the combined results
print(pricing_results)
# Perform Linear Regression for each city
lr_results <- list()
# Loop through each city dataset
for (city_name in names(city_datasets)) {
# Get the city dataset
city_data <- city_datasets[[city_name]]
# Perform Linear Regression with price as IV and stay_type as DV with moderators room_type and review_scores_rating
lr_result <- lm(price ~ stay_type_dummy * room_type * review_scores_rating, data = city_data)
# Store Linear Regression results in the list
lr_results[[city_name]] <- tidy(lr_result)
}
# Print Linear Regression results for each city
for (city_name in names(lr_results)) {
cat("City:", city_name, "\n")
print(lr_results[[city_name]])
cat("\n")
}
source("~/Github/team-project-dprep_group_8/src/data-preparation/data-preparation.R", echo=TRUE)
source("~/Github/team-project-dprep_group_8/src/analysis/Analysis.R", echo=TRUE)
setwd("~/Github/00_new_dprep_github/team-project-dprep_group_8/src/analysis")
